import React, { useState } from 'react';
import { toast } from 'react-toastify';

interface IMAGE {
  _id: string;
  photo: string;
  prompt: string;
  name: string;
}

type SearchProps = {
  setImages: React.Dispatch<React.SetStateAction<IMAGE[]>>;
};

const Search = ({ setImages } : SearchProps) => {
  const host = process.env.NEXT_PUBLIC_LOCAL_HOST;
  const [search, setSearch] = useState<string>('');

  const searchImages = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    
    try {
      const response = await fetch(`${host}/post/searchPosts/${search}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      const json = await response.json();
      
      if (json?.success) {
        if(json?.images.length == 0)
            return toast.error('No images found')
        setImages(json?.images);
      } else {
        toast.error(`error = ${json?.msg}`);
      }
    } catch (error: any) {
      console.error(`Internal server error: ${error.message}`);
    }
  };

  return (
    <div className="p-5">
      <h2 className="text-center m-4 font-semibold text-lg text-white">
        All images are generated by OpenAi
      </h2>
      <form onSubmit={searchImages}>
      <input
        type="text"
        placeholder="Find images with any tag..."
        className="w-full p-2 indent-2 text-white outline-none border-[5px] border-gray-800 rounded-lg bg-gray-600/50"
        value={search}
        onChange={(e) => setSearch(e.target.value)}
      />
      </form>
    </div>
  );
};

export default Search;
